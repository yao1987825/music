name: Build and Publish ImmortalWrt Docker Image

on:
  workflow_dispatch: # 手动触发
  push:
    branches:
      - main # 或其他你想要触发构建的分支

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download rootfs
        run: |
          wget https://downloads.immortalwrt.org/releases/24.10.0-rc3/targets/armsr/armv8/immortalwrt-24.10.0-rc3-armsr-armv8-rootfs.tar.gz
          mv immortalwrt-24.10.0-rc3-armsr-armv8-rootfs.tar.gz rootfs.tar.gz

      - name: Extract rootfs
        run: tar xzf rootfs.tar.gz

      - name: Remove original tar.gz
        run: rm rootfs.tar.gz

      - name: Create rootfs.tar
        run: tar -cf rootfs.tar * # 将当前目录所有内容打包成 rootfs.tar

      - name: Create Dockerfile
        run: |
          echo "FROM scratch" > Dockerfile
          echo "ADD rootfs.tar /" >> Dockerfile

      - name: Build Docker Image
        run: docker build -t immortalwrt-image .

      - name: Tag Docker Image
        run: docker tag immortalwrt-image ghcr.io/${{ github.repository_owner }}/immortalwrt-image:${{ github.run_id }}

      - name: Login to GitHub Container Registry
        run: echo "${{ secrets.PERSONAL_ACCESS_TOKEN }}" | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin

      - name: Push Docker Image
        run: docker push ghcr.io/${{ github.repository_owner }}/immortalwrt-image:${{ github.run_id }}
        
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        with:
          tag_name: ${{ github.run_id }}
          release_name: Release ${{ github.run_id }}
          body: |
            Docker image for ImmortalWrt based on build ${{ github.run_id }}.
            Image is available at ghcr.io/${{ github.repository_owner }}/immortalwrt-image:${{ github.run_id }}
          draft: false
          prerelease: false

      - name: Write information to docker-image.txt
        run: echo "ghcr.io/${{ github.repository_owner }}/immortalwrt-image:${{ github.run_id }}" > docker-image.txt
        
      - name: Upload Docker Image to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: docker-image.txt
          asset_name: docker-image.txt
          asset_content_type: text/plain
